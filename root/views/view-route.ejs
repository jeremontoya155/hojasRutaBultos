<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/route-details.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <title>Detalles de Hoja de Ruta</title>
</head>
<body>
    <div class="container">
        <header>
            <h2>Detalles de la Hoja de Ruta: ID <%= routeSheetId %></h2>
        </header>

        <!-- Mostrar el total de bultos basado en los códigos de barra -->
        <section class="summary-section">
            <div class="total-box">
                <h3>Total de Bultos</h3>
                <p><strong>Total Bultos:</strong> <%= totalBultos %></p>
            </div>
        </section>

        <section class="summary-section">
            <div class="summary-box">
                <h3>Resumen de Códigos</h3>
                <table class="summary-table">
                    <thead>
                        <tr>
                            <th>Tipo</th>
                            <th>Cantidad</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (Object.keys(summaryByType).length > 0) { %>
                            <% for (let [tipo, cantidad] of Object.entries(summaryByType)) { %>
                                <tr>
                                    <td><%= tipo %></td>
                                    <td><%= cantidad %></td>
                                </tr>
                            <% } %>
                        <% } else { %>
                            <tr>
                                <td colspan="2">No hay datos disponibles</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </section>

        <section class="breakdown-section">
            <h3>Desglose Detallado por Código</h3>
            <% if (Object.keys(detailedBreakdown).length > 0) { %>
                <div class="breakdown-container">
                    <% if (situacion !== 'Recibido Sucursal') { %>
                        <input class="search-input" type="text" placeholder="Buscar en códigos..." onkeyup="filterAllTables(this)" />
                        <input class="barcode-input" type="text" id="barcodeInput" placeholder="Escanear código de barras..." autofocus />
                    <% } %>
                    <table class="detailed-table" id="detailed-table">
                        <thead>
                            <tr>
                                <th>Tipo</th>
                                <th>Código</th>
                                <th>Recibido</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% for (let [tipo, codigos] of Object.entries(detailedBreakdown)) { %>
                                <% codigos.forEach(codigoObj => { %>
                                    <tr data-tipo="<%= tipo %>" data-codigo="<%= codigoObj.codigo %>">
                                        <td><%= tipo %></td>
                                        <td><%= codigoObj.codigo %></td>
                                        <td class="recibido-status">
                                            <%= codigoObj.recibido === 'Recibido' ? 'Recibido' : '-' %>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            <% } else { %>
                <p>No hay detalles disponibles.</p>
            <% } %>
        </section>
        
        <footer>
            <button class="back-btn" onclick="window.location.href='/my-routes'">Volver a mis hojas de ruta</button>
        </footer>
    </div>

    <script>
        let scanTimeout = null;

        // Filtrar códigos en la tabla
        function filterAllTables(input) {
            const filter = input.value.toUpperCase();
            const table = document.getElementById('detailed-table');
            const trs = table.getElementsByTagName('tr');

            for (let i = 0; i < trs.length; i++) {
                const tds = trs[i].getElementsByTagName('td');
                const tipoText = tds[0] ? tds[0].textContent.toUpperCase() : "";
                const codeText = tds[1] ? tds[1].textContent.toUpperCase() : "";

                if (tipoText.includes(filter) || codeText.includes(filter)) {
                    trs[i].style.display = "";
                } else {
                    trs[i].style.display = "none";
                }
            }
        }

        // Escaneo de código de barras con latencia
        document.getElementById('barcodeInput').addEventListener('input', function(e) {
            const scannedCode = e.target.value;

            // Borrar el timeout anterior
            if (scanTimeout) {
                clearTimeout(scanTimeout);
            }

            // Establecer un timeout para procesar el código después de una pausa
            scanTimeout = setTimeout(() => {
                if (scannedCode) {
                    fetch(`/my-routes/scan-code/<%= routeSheetId %>`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ codigo: scannedCode })
                    }).then(response => {
                        if (response.ok) {
                            markAsReceived(scannedCode); // Marcar como recibido en la tabla
                            alert('Código marcado como recibido');
                        } else {
                            alert('Error al procesar el código o no encontrado');
                        }
                    });
                }

                // Limpiar el campo para el siguiente escaneo
                e.target.value = '';
            }, 500);  // Latencia de 500ms para evitar que se envíe carácter por carácter
        });

        // Marcar como recibido en la tabla
        function markAsReceived(codigo) {
            const rows = document.querySelectorAll(`#detailed-table tbody tr`);
            rows.forEach(row => {
                if (row.getAttribute('data-codigo') === codigo) {
                    row.style.backgroundColor = "#d4edda"; // Cambiar el color al marcar como recibido
                    const recibidoCell = row.querySelector('.recibido-status');
                    recibidoCell.textContent = "Recibido"; // Cambiar el estado a "Recibido"
                }
            });
        }
    </script>
</body>
</html>
